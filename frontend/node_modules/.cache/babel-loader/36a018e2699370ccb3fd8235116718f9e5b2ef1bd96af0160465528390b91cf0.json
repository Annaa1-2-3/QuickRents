{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0410\\u043D\\u043D\\u0430\\\\Desktop\\\\QuickRents\\\\frontend\\\\src\\\\components\\\\PropertyList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"../api/axios\";\nimport { Typography, Card, CardContent, Grid, Button } from \"@mui/material\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PropertyList = () => {\n  _s();\n  const [properties, setProperties] = useState([]);\n  const [error, setError] = useState(\"\");\n  useEffect(() => {\n    axios.get(\"/properties\").then(res => setProperties(res.data.properties)).catch(() => setError(\"Ошибка загрузки объявлений\"));\n  }, []);\n  if (error) return /*#__PURE__*/_jsxDEV(Typography, {\n    color: \"error\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      mb: 2,\n      children: \"\\u0412\\u0441\\u0435 \\u043E\\u0431\\u044A\\u044F\\u0432\\u043B\\u0435\\u043D\\u0438\\u044F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      columns: 12,\n      spacing: 2,\n      children: properties.map(property => /*#__PURE__*/_jsxDEV(Grid, {\n        span: 6,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: property.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              children: [property.city, \", \", property.address]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              children: [\"\\u0426\\u0435\\u043D\\u0430: \", property.price_per_night, \"\\u20BD/\\u043D\\u043E\\u0447\\u044C\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              component: Link,\n              to: `/properties/${property.id}`,\n              variant: \"outlined\",\n              sx: {\n                mt: 1\n              },\n              children: \"\\u041F\\u043E\\u0434\\u0440\\u043E\\u0431\\u043D\\u0435\\u0435\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this)\n      }, property.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(PropertyList, \"nCInzhDOhV8VpPx9akkgUizr2Kk=\");\n_c = PropertyList;\nexport default PropertyList;\nvar _c;\n$RefreshReg$(_c, \"PropertyList\");","map":{"version":3,"names":["React","useEffect","useState","axios","Typography","Card","CardContent","Grid","Button","Link","jsxDEV","_jsxDEV","PropertyList","_s","properties","setProperties","error","setError","get","then","res","data","catch","color","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","mb","container","columns","spacing","map","property","span","title","city","address","price_per_night","component","to","id","sx","mt","_c","$RefreshReg$"],"sources":["C:/Users/Анна/Desktop/QuickRents/frontend/src/components/PropertyList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"../api/axios\";\r\nimport { Typography, Card, CardContent, Grid, Button } from \"@mui/material\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst PropertyList = () => {\r\n  const [properties, setProperties] = useState([]);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    axios.get(\"/properties\")\r\n      .then(res => setProperties(res.data.properties))\r\n      .catch(() => setError(\"Ошибка загрузки объявлений\"));\r\n  }, []);\r\n\r\n  if (error) return <Typography color=\"error\">{error}</Typography>;\r\n\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h4\" mb={2}>Все объявления</Typography>\r\n      <Grid container columns={12} spacing={2}>\r\n        {properties.map(property => (\r\n          <Grid span={6} key={property.id}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\">{property.title}</Typography>\r\n                <Typography>{property.city}, {property.address}</Typography>\r\n                <Typography>Цена: {property.price_per_night}₽/ночь</Typography>\r\n                <Button component={Link} to={`/properties/${property.id}`} variant=\"outlined\" sx={{ mt: 1 }}>\r\n                  Подробнее\r\n                </Button>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PropertyList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}